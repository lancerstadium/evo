#ifndef ETM_VERIFIER_H
#define ETM_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef ETM_READER_H
#include "etm_reader.h"
#endif
#include "../flatcc/flatcc_verifier.h"
#include "../flatcc/flatcc_prologue.h"

static int etm_Tensor_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataFloat_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataInt_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataString_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataTensor_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataGraph_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataFloats_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataInts_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataBytes_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataTensors_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_AttrDataGraphs_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_Attr_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_Node_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_Graph_verify_table(flatcc_table_verifier_descriptor_t *td);
static int etm_Model_verify_table(flatcc_table_verifier_descriptor_t *td);

static int etm_AttrData_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, etm_AttrDataFloat_verify_table); /* AttrDataFloat */
    case 2: return flatcc_verify_union_table(ud, etm_AttrDataInt_verify_table); /* AttrDataInt */
    case 3: return flatcc_verify_union_table(ud, etm_AttrDataString_verify_table); /* AttrDataString */
    case 4: return flatcc_verify_union_table(ud, etm_AttrDataTensor_verify_table); /* AttrDataTensor */
    case 5: return flatcc_verify_union_table(ud, etm_AttrDataGraph_verify_table); /* AttrDataGraph */
    case 6: return flatcc_verify_union_table(ud, etm_AttrDataFloats_verify_table); /* AttrDataFloats */
    case 7: return flatcc_verify_union_table(ud, etm_AttrDataInts_verify_table); /* AttrDataInts */
    case 8: return flatcc_verify_union_table(ud, etm_AttrDataBytes_verify_table); /* AttrDataBytes */
    case 9: return flatcc_verify_union_table(ud, etm_AttrDataTensors_verify_table); /* AttrDataTensors */
    case 10: return flatcc_verify_union_table(ud, etm_AttrDataGraphs_verify_table); /* AttrDataGraphs */
    default: return flatcc_verify_ok;
    }
}

static int etm_Tensor_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* type */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 4, 4, INT64_C(1073741823)) /* dims */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 1, 1, INT64_C(4294967295)) /* datas */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 8, 8) /* ndata */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 1, 1) /* isParam */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 1, 1) /* layout */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_Tensor_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Tensor_identifier, &etm_Tensor_verify_table);
}

static inline int etm_Tensor_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Tensor_identifier, &etm_Tensor_verify_table);
}

static inline int etm_Tensor_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Tensor_type_identifier, &etm_Tensor_verify_table);
}

static inline int etm_Tensor_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Tensor_type_identifier, &etm_Tensor_verify_table);
}

static inline int etm_Tensor_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_Tensor_verify_table);
}

static inline int etm_Tensor_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_Tensor_verify_table);
}

static inline int etm_Tensor_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_Tensor_verify_table);
}

static inline int etm_Tensor_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_Tensor_verify_table);
}

static int etm_AttrDataFloat_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* f */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataFloat_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataFloat_identifier, &etm_AttrDataFloat_verify_table);
}

static inline int etm_AttrDataFloat_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataFloat_identifier, &etm_AttrDataFloat_verify_table);
}

static inline int etm_AttrDataFloat_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataFloat_type_identifier, &etm_AttrDataFloat_verify_table);
}

static inline int etm_AttrDataFloat_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataFloat_type_identifier, &etm_AttrDataFloat_verify_table);
}

static inline int etm_AttrDataFloat_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataFloat_verify_table);
}

static inline int etm_AttrDataFloat_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataFloat_verify_table);
}

static inline int etm_AttrDataFloat_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataFloat_verify_table);
}

static inline int etm_AttrDataFloat_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataFloat_verify_table);
}

static int etm_AttrDataInt_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* i */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataInt_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataInt_identifier, &etm_AttrDataInt_verify_table);
}

static inline int etm_AttrDataInt_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataInt_identifier, &etm_AttrDataInt_verify_table);
}

static inline int etm_AttrDataInt_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataInt_type_identifier, &etm_AttrDataInt_verify_table);
}

static inline int etm_AttrDataInt_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataInt_type_identifier, &etm_AttrDataInt_verify_table);
}

static inline int etm_AttrDataInt_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataInt_verify_table);
}

static inline int etm_AttrDataInt_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataInt_verify_table);
}

static inline int etm_AttrDataInt_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataInt_verify_table);
}

static inline int etm_AttrDataInt_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataInt_verify_table);
}

static int etm_AttrDataString_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* s */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataString_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataString_identifier, &etm_AttrDataString_verify_table);
}

static inline int etm_AttrDataString_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataString_identifier, &etm_AttrDataString_verify_table);
}

static inline int etm_AttrDataString_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataString_type_identifier, &etm_AttrDataString_verify_table);
}

static inline int etm_AttrDataString_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataString_type_identifier, &etm_AttrDataString_verify_table);
}

static inline int etm_AttrDataString_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataString_verify_table);
}

static inline int etm_AttrDataString_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataString_verify_table);
}

static inline int etm_AttrDataString_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataString_verify_table);
}

static inline int etm_AttrDataString_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataString_verify_table);
}

static int etm_AttrDataTensor_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &etm_Tensor_verify_table) /* t */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataTensor_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataTensor_identifier, &etm_AttrDataTensor_verify_table);
}

static inline int etm_AttrDataTensor_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataTensor_identifier, &etm_AttrDataTensor_verify_table);
}

static inline int etm_AttrDataTensor_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataTensor_type_identifier, &etm_AttrDataTensor_verify_table);
}

static inline int etm_AttrDataTensor_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataTensor_type_identifier, &etm_AttrDataTensor_verify_table);
}

static inline int etm_AttrDataTensor_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataTensor_verify_table);
}

static inline int etm_AttrDataTensor_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataTensor_verify_table);
}

static inline int etm_AttrDataTensor_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataTensor_verify_table);
}

static inline int etm_AttrDataTensor_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataTensor_verify_table);
}

static int etm_AttrDataGraph_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &etm_Graph_verify_table) /* g */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataGraph_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataGraph_identifier, &etm_AttrDataGraph_verify_table);
}

static inline int etm_AttrDataGraph_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataGraph_identifier, &etm_AttrDataGraph_verify_table);
}

static inline int etm_AttrDataGraph_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataGraph_type_identifier, &etm_AttrDataGraph_verify_table);
}

static inline int etm_AttrDataGraph_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataGraph_type_identifier, &etm_AttrDataGraph_verify_table);
}

static inline int etm_AttrDataGraph_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataGraph_verify_table);
}

static inline int etm_AttrDataGraph_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataGraph_verify_table);
}

static inline int etm_AttrDataGraph_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataGraph_verify_table);
}

static inline int etm_AttrDataGraph_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataGraph_verify_table);
}

static int etm_AttrDataFloats_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 4, 4, INT64_C(1073741823)) /* fs */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataFloats_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataFloats_identifier, &etm_AttrDataFloats_verify_table);
}

static inline int etm_AttrDataFloats_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataFloats_identifier, &etm_AttrDataFloats_verify_table);
}

static inline int etm_AttrDataFloats_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataFloats_type_identifier, &etm_AttrDataFloats_verify_table);
}

static inline int etm_AttrDataFloats_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataFloats_type_identifier, &etm_AttrDataFloats_verify_table);
}

static inline int etm_AttrDataFloats_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataFloats_verify_table);
}

static inline int etm_AttrDataFloats_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataFloats_verify_table);
}

static inline int etm_AttrDataFloats_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataFloats_verify_table);
}

static inline int etm_AttrDataFloats_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataFloats_verify_table);
}

static int etm_AttrDataInts_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 8, 8, INT64_C(536870911)) /* is */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataInts_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataInts_identifier, &etm_AttrDataInts_verify_table);
}

static inline int etm_AttrDataInts_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataInts_identifier, &etm_AttrDataInts_verify_table);
}

static inline int etm_AttrDataInts_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataInts_type_identifier, &etm_AttrDataInts_verify_table);
}

static inline int etm_AttrDataInts_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataInts_type_identifier, &etm_AttrDataInts_verify_table);
}

static inline int etm_AttrDataInts_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataInts_verify_table);
}

static inline int etm_AttrDataInts_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataInts_verify_table);
}

static inline int etm_AttrDataInts_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataInts_verify_table);
}

static inline int etm_AttrDataInts_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataInts_verify_table);
}

static int etm_AttrDataBytes_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 1, 1, INT64_C(4294967295)) /* is */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataBytes_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataBytes_identifier, &etm_AttrDataBytes_verify_table);
}

static inline int etm_AttrDataBytes_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataBytes_identifier, &etm_AttrDataBytes_verify_table);
}

static inline int etm_AttrDataBytes_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataBytes_type_identifier, &etm_AttrDataBytes_verify_table);
}

static inline int etm_AttrDataBytes_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataBytes_type_identifier, &etm_AttrDataBytes_verify_table);
}

static inline int etm_AttrDataBytes_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataBytes_verify_table);
}

static inline int etm_AttrDataBytes_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataBytes_verify_table);
}

static inline int etm_AttrDataBytes_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataBytes_verify_table);
}

static inline int etm_AttrDataBytes_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataBytes_verify_table);
}

static int etm_AttrDataTensors_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &etm_Tensor_verify_table) /* ts */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataTensors_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataTensors_identifier, &etm_AttrDataTensors_verify_table);
}

static inline int etm_AttrDataTensors_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataTensors_identifier, &etm_AttrDataTensors_verify_table);
}

static inline int etm_AttrDataTensors_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataTensors_type_identifier, &etm_AttrDataTensors_verify_table);
}

static inline int etm_AttrDataTensors_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataTensors_type_identifier, &etm_AttrDataTensors_verify_table);
}

static inline int etm_AttrDataTensors_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataTensors_verify_table);
}

static inline int etm_AttrDataTensors_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataTensors_verify_table);
}

static inline int etm_AttrDataTensors_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataTensors_verify_table);
}

static inline int etm_AttrDataTensors_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataTensors_verify_table);
}

static int etm_AttrDataGraphs_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &etm_Graph_verify_table) /* gs */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_AttrDataGraphs_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataGraphs_identifier, &etm_AttrDataGraphs_verify_table);
}

static inline int etm_AttrDataGraphs_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataGraphs_identifier, &etm_AttrDataGraphs_verify_table);
}

static inline int etm_AttrDataGraphs_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_AttrDataGraphs_type_identifier, &etm_AttrDataGraphs_verify_table);
}

static inline int etm_AttrDataGraphs_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_AttrDataGraphs_type_identifier, &etm_AttrDataGraphs_verify_table);
}

static inline int etm_AttrDataGraphs_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_AttrDataGraphs_verify_table);
}

static inline int etm_AttrDataGraphs_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_AttrDataGraphs_verify_table);
}

static inline int etm_AttrDataGraphs_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_AttrDataGraphs_verify_table);
}

static inline int etm_AttrDataGraphs_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_AttrDataGraphs_verify_table);
}

static int etm_Attr_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* k */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 2, 0, &etm_AttrData_union_verifier) /* v */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_Attr_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Attr_identifier, &etm_Attr_verify_table);
}

static inline int etm_Attr_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Attr_identifier, &etm_Attr_verify_table);
}

static inline int etm_Attr_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Attr_type_identifier, &etm_Attr_verify_table);
}

static inline int etm_Attr_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Attr_type_identifier, &etm_Attr_verify_table);
}

static inline int etm_Attr_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_Attr_verify_table);
}

static inline int etm_Attr_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_Attr_verify_table);
}

static inline int etm_Attr_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_Attr_verify_table);
}

static inline int etm_Attr_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_Attr_verify_table);
}

static int etm_Node_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 2, 2, INT64_C(2147483647)) /* in */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 2, 2, INT64_C(2147483647)) /* out */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 4, 4) /* optype */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 4, 0, &etm_Attr_verify_table) /* attrs */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_Node_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Node_identifier, &etm_Node_verify_table);
}

static inline int etm_Node_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Node_identifier, &etm_Node_verify_table);
}

static inline int etm_Node_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Node_type_identifier, &etm_Node_verify_table);
}

static inline int etm_Node_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Node_type_identifier, &etm_Node_verify_table);
}

static inline int etm_Node_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_Node_verify_table);
}

static inline int etm_Node_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_Node_verify_table);
}

static inline int etm_Node_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_Node_verify_table);
}

static inline int etm_Node_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_Node_verify_table);
}

static int etm_Graph_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &etm_Tensor_verify_table) /* tensors */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &etm_Node_verify_table) /* nodes */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 1, 1) /* layout */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 2, 2, INT64_C(2147483647)) /* in */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 4, 0, 2, 2, INT64_C(2147483647)) /* out */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_Graph_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Graph_identifier, &etm_Graph_verify_table);
}

static inline int etm_Graph_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Graph_identifier, &etm_Graph_verify_table);
}

static inline int etm_Graph_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Graph_type_identifier, &etm_Graph_verify_table);
}

static inline int etm_Graph_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Graph_type_identifier, &etm_Graph_verify_table);
}

static inline int etm_Graph_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_Graph_verify_table);
}

static inline int etm_Graph_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_Graph_verify_table);
}

static inline int etm_Graph_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_Graph_verify_table);
}

static inline int etm_Graph_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_Graph_verify_table);
}

static int etm_Model_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &etm_Graph_verify_table) /* graphs */)) return ret;
    return flatcc_verify_ok;
}

static inline int etm_Model_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Model_identifier, &etm_Model_verify_table);
}

static inline int etm_Model_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Model_identifier, &etm_Model_verify_table);
}

static inline int etm_Model_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, etm_Model_type_identifier, &etm_Model_verify_table);
}

static inline int etm_Model_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, etm_Model_type_identifier, &etm_Model_verify_table);
}

static inline int etm_Model_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &etm_Model_verify_table);
}

static inline int etm_Model_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &etm_Model_verify_table);
}

static inline int etm_Model_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &etm_Model_verify_table);
}

static inline int etm_Model_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &etm_Model_verify_table);
}

#include "../flatcc/flatcc_epilogue.h"
#endif /* ETM_VERIFIER_H */
