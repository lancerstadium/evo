#ifndef TFLITE_BUILDER_H
#define TFLITE_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef TFLITE_READER_H
#include "tflite_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#undef flatbuffers_identifier
#define flatbuffers_identifier "M001"
#undef flatbuffers_extension
#define flatbuffers_extension "tflitemeta"

#define __tflite_AssociatedFileType_formal_args , tflite_AssociatedFileType_enum_t v0
#define __tflite_AssociatedFileType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, tflite_AssociatedFileType, tflite_AssociatedFileType_enum_t)
#define __tflite_ColorSpaceType_formal_args , tflite_ColorSpaceType_enum_t v0
#define __tflite_ColorSpaceType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, tflite_ColorSpaceType, tflite_ColorSpaceType_enum_t)
#define __tflite_BoundingBoxType_formal_args , tflite_BoundingBoxType_enum_t v0
#define __tflite_BoundingBoxType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, tflite_BoundingBoxType, tflite_BoundingBoxType_enum_t)
#define __tflite_CoordinateType_formal_args , tflite_CoordinateType_enum_t v0
#define __tflite_CoordinateType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, tflite_CoordinateType, tflite_CoordinateType_enum_t)
#define __tflite_ScoreTransformationType_formal_args , tflite_ScoreTransformationType_enum_t v0
#define __tflite_ScoreTransformationType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, tflite_ScoreTransformationType, tflite_ScoreTransformationType_enum_t)

typedef flatbuffers_union_ref_t tflite_ContentProperties_union_ref_t;
typedef flatbuffers_union_vec_ref_t tflite_ContentProperties_union_vec_ref_t;
static tflite_ContentProperties_union_ref_t tflite_ContentProperties_clone(flatbuffers_builder_t *B, tflite_ContentProperties_union_t t);
typedef flatbuffers_union_ref_t tflite_ProcessUnitOptions_union_ref_t;
typedef flatbuffers_union_vec_ref_t tflite_ProcessUnitOptions_union_vec_ref_t;
static tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_clone(flatbuffers_builder_t *B, tflite_ProcessUnitOptions_union_t t);

static const flatbuffers_voffset_t __tflite_AssociatedFile_required[] = { 0 };
typedef flatbuffers_ref_t tflite_AssociatedFile_ref_t;
static tflite_AssociatedFile_ref_t tflite_AssociatedFile_clone(flatbuffers_builder_t *B, tflite_AssociatedFile_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_AssociatedFile, 5)

static const flatbuffers_voffset_t __tflite_FeatureProperties_required[] = { 0 };
typedef flatbuffers_ref_t tflite_FeatureProperties_ref_t;
static tflite_FeatureProperties_ref_t tflite_FeatureProperties_clone(flatbuffers_builder_t *B, tflite_FeatureProperties_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_FeatureProperties, 0)

static const flatbuffers_voffset_t __tflite_ImageSize_required[] = { 0 };
typedef flatbuffers_ref_t tflite_ImageSize_ref_t;
static tflite_ImageSize_ref_t tflite_ImageSize_clone(flatbuffers_builder_t *B, tflite_ImageSize_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_ImageSize, 2)

static const flatbuffers_voffset_t __tflite_ImageProperties_required[] = { 0 };
typedef flatbuffers_ref_t tflite_ImageProperties_ref_t;
static tflite_ImageProperties_ref_t tflite_ImageProperties_clone(flatbuffers_builder_t *B, tflite_ImageProperties_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_ImageProperties, 2)

static const flatbuffers_voffset_t __tflite_AudioProperties_required[] = { 0 };
typedef flatbuffers_ref_t tflite_AudioProperties_ref_t;
static tflite_AudioProperties_ref_t tflite_AudioProperties_clone(flatbuffers_builder_t *B, tflite_AudioProperties_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_AudioProperties, 2)

static const flatbuffers_voffset_t __tflite_BoundingBoxProperties_required[] = { 0 };
typedef flatbuffers_ref_t tflite_BoundingBoxProperties_ref_t;
static tflite_BoundingBoxProperties_ref_t tflite_BoundingBoxProperties_clone(flatbuffers_builder_t *B, tflite_BoundingBoxProperties_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_BoundingBoxProperties, 3)

static const flatbuffers_voffset_t __tflite_ValueRange_required[] = { 0 };
typedef flatbuffers_ref_t tflite_ValueRange_ref_t;
static tflite_ValueRange_ref_t tflite_ValueRange_clone(flatbuffers_builder_t *B, tflite_ValueRange_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_ValueRange, 2)

static const flatbuffers_voffset_t __tflite_Content_required[] = { 0 };
typedef flatbuffers_ref_t tflite_Content_ref_t;
static tflite_Content_ref_t tflite_Content_clone(flatbuffers_builder_t *B, tflite_Content_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_Content, 3)

static const flatbuffers_voffset_t __tflite_NormalizationOptions_required[] = { 0 };
typedef flatbuffers_ref_t tflite_NormalizationOptions_ref_t;
static tflite_NormalizationOptions_ref_t tflite_NormalizationOptions_clone(flatbuffers_builder_t *B, tflite_NormalizationOptions_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_NormalizationOptions, 2)

static const flatbuffers_voffset_t __tflite_ScoreCalibrationOptions_required[] = { 0 };
typedef flatbuffers_ref_t tflite_ScoreCalibrationOptions_ref_t;
static tflite_ScoreCalibrationOptions_ref_t tflite_ScoreCalibrationOptions_clone(flatbuffers_builder_t *B, tflite_ScoreCalibrationOptions_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_ScoreCalibrationOptions, 2)

static const flatbuffers_voffset_t __tflite_ScoreThresholdingOptions_required[] = { 0 };
typedef flatbuffers_ref_t tflite_ScoreThresholdingOptions_ref_t;
static tflite_ScoreThresholdingOptions_ref_t tflite_ScoreThresholdingOptions_clone(flatbuffers_builder_t *B, tflite_ScoreThresholdingOptions_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_ScoreThresholdingOptions, 1)

static const flatbuffers_voffset_t __tflite_BertTokenizerOptions_required[] = { 0 };
typedef flatbuffers_ref_t tflite_BertTokenizerOptions_ref_t;
static tflite_BertTokenizerOptions_ref_t tflite_BertTokenizerOptions_clone(flatbuffers_builder_t *B, tflite_BertTokenizerOptions_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_BertTokenizerOptions, 1)

static const flatbuffers_voffset_t __tflite_SentencePieceTokenizerOptions_required[] = { 0 };
typedef flatbuffers_ref_t tflite_SentencePieceTokenizerOptions_ref_t;
static tflite_SentencePieceTokenizerOptions_ref_t tflite_SentencePieceTokenizerOptions_clone(flatbuffers_builder_t *B, tflite_SentencePieceTokenizerOptions_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_SentencePieceTokenizerOptions, 2)

static const flatbuffers_voffset_t __tflite_RegexTokenizerOptions_required[] = { 0 };
typedef flatbuffers_ref_t tflite_RegexTokenizerOptions_ref_t;
static tflite_RegexTokenizerOptions_ref_t tflite_RegexTokenizerOptions_clone(flatbuffers_builder_t *B, tflite_RegexTokenizerOptions_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_RegexTokenizerOptions, 2)

static const flatbuffers_voffset_t __tflite_ProcessUnit_required[] = { 0 };
typedef flatbuffers_ref_t tflite_ProcessUnit_ref_t;
static tflite_ProcessUnit_ref_t tflite_ProcessUnit_clone(flatbuffers_builder_t *B, tflite_ProcessUnit_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_ProcessUnit, 2)

static const flatbuffers_voffset_t __tflite_Stats_required[] = { 0 };
typedef flatbuffers_ref_t tflite_Stats_ref_t;
static tflite_Stats_ref_t tflite_Stats_clone(flatbuffers_builder_t *B, tflite_Stats_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_Stats, 2)

static const flatbuffers_voffset_t __tflite_TensorGroup_required[] = { 0 };
typedef flatbuffers_ref_t tflite_TensorGroup_ref_t;
static tflite_TensorGroup_ref_t tflite_TensorGroup_clone(flatbuffers_builder_t *B, tflite_TensorGroup_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_TensorGroup, 2)

static const flatbuffers_voffset_t __tflite_TensorMetadata_required[] = { 0 };
typedef flatbuffers_ref_t tflite_TensorMetadata_ref_t;
static tflite_TensorMetadata_ref_t tflite_TensorMetadata_clone(flatbuffers_builder_t *B, tflite_TensorMetadata_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_TensorMetadata, 7)

static const flatbuffers_voffset_t __tflite_CustomMetadata_required[] = { 0 };
typedef flatbuffers_ref_t tflite_CustomMetadata_ref_t;
static tflite_CustomMetadata_ref_t tflite_CustomMetadata_clone(flatbuffers_builder_t *B, tflite_CustomMetadata_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_CustomMetadata, 1)

static const flatbuffers_voffset_t __tflite_SubGraphMetadata_required[] = { 0 };
typedef flatbuffers_ref_t tflite_SubGraphMetadata_ref_t;
static tflite_SubGraphMetadata_ref_t tflite_SubGraphMetadata_clone(flatbuffers_builder_t *B, tflite_SubGraphMetadata_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_SubGraphMetadata, 10)

static const flatbuffers_voffset_t __tflite_ModelMetadata_required[] = { 0 };
typedef flatbuffers_ref_t tflite_ModelMetadata_ref_t;
static tflite_ModelMetadata_ref_t tflite_ModelMetadata_clone(flatbuffers_builder_t *B, tflite_ModelMetadata_table_t t);
__flatbuffers_build_table(flatbuffers_, tflite_ModelMetadata, 8)

#define __tflite_AssociatedFile_formal_args ,\
  flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, tflite_AssociatedFileType_enum_t v2, flatbuffers_string_ref_t v3, flatbuffers_string_ref_t v4
#define __tflite_AssociatedFile_call_args ,\
  v0, v1, v2, v3, v4
static inline tflite_AssociatedFile_ref_t tflite_AssociatedFile_create(flatbuffers_builder_t *B __tflite_AssociatedFile_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_AssociatedFile, tflite_AssociatedFile_file_identifier, tflite_AssociatedFile_type_identifier)

#define __tflite_FeatureProperties_formal_args 
#define __tflite_FeatureProperties_call_args 
static inline tflite_FeatureProperties_ref_t tflite_FeatureProperties_create(flatbuffers_builder_t *B __tflite_FeatureProperties_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_FeatureProperties, tflite_FeatureProperties_file_identifier, tflite_FeatureProperties_type_identifier)

#define __tflite_ImageSize_formal_args , uint32_t v0, uint32_t v1
#define __tflite_ImageSize_call_args , v0, v1
static inline tflite_ImageSize_ref_t tflite_ImageSize_create(flatbuffers_builder_t *B __tflite_ImageSize_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_ImageSize, tflite_ImageSize_file_identifier, tflite_ImageSize_type_identifier)

#define __tflite_ImageProperties_formal_args , tflite_ColorSpaceType_enum_t v0, tflite_ImageSize_ref_t v1
#define __tflite_ImageProperties_call_args , v0, v1
static inline tflite_ImageProperties_ref_t tflite_ImageProperties_create(flatbuffers_builder_t *B __tflite_ImageProperties_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_ImageProperties, tflite_ImageProperties_file_identifier, tflite_ImageProperties_type_identifier)

#define __tflite_AudioProperties_formal_args , uint32_t v0, uint32_t v1
#define __tflite_AudioProperties_call_args , v0, v1
static inline tflite_AudioProperties_ref_t tflite_AudioProperties_create(flatbuffers_builder_t *B __tflite_AudioProperties_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_AudioProperties, tflite_AudioProperties_file_identifier, tflite_AudioProperties_type_identifier)

#define __tflite_BoundingBoxProperties_formal_args , flatbuffers_uint32_vec_ref_t v0, tflite_BoundingBoxType_enum_t v1, tflite_CoordinateType_enum_t v2
#define __tflite_BoundingBoxProperties_call_args , v0, v1, v2
static inline tflite_BoundingBoxProperties_ref_t tflite_BoundingBoxProperties_create(flatbuffers_builder_t *B __tflite_BoundingBoxProperties_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_BoundingBoxProperties, tflite_BoundingBoxProperties_file_identifier, tflite_BoundingBoxProperties_type_identifier)

#define __tflite_ValueRange_formal_args , int32_t v0, int32_t v1
#define __tflite_ValueRange_call_args , v0, v1
static inline tflite_ValueRange_ref_t tflite_ValueRange_create(flatbuffers_builder_t *B __tflite_ValueRange_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_ValueRange, tflite_ValueRange_file_identifier, tflite_ValueRange_type_identifier)

#define __tflite_Content_formal_args , tflite_ContentProperties_union_ref_t v1, tflite_ValueRange_ref_t v2
#define __tflite_Content_call_args , v1, v2
static inline tflite_Content_ref_t tflite_Content_create(flatbuffers_builder_t *B __tflite_Content_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_Content, tflite_Content_file_identifier, tflite_Content_type_identifier)

#define __tflite_NormalizationOptions_formal_args , flatbuffers_float_vec_ref_t v0, flatbuffers_float_vec_ref_t v1
#define __tflite_NormalizationOptions_call_args , v0, v1
static inline tflite_NormalizationOptions_ref_t tflite_NormalizationOptions_create(flatbuffers_builder_t *B __tflite_NormalizationOptions_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_NormalizationOptions, tflite_NormalizationOptions_file_identifier, tflite_NormalizationOptions_type_identifier)

#define __tflite_ScoreCalibrationOptions_formal_args , tflite_ScoreTransformationType_enum_t v0, float v1
#define __tflite_ScoreCalibrationOptions_call_args , v0, v1
static inline tflite_ScoreCalibrationOptions_ref_t tflite_ScoreCalibrationOptions_create(flatbuffers_builder_t *B __tflite_ScoreCalibrationOptions_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_ScoreCalibrationOptions, tflite_ScoreCalibrationOptions_file_identifier, tflite_ScoreCalibrationOptions_type_identifier)

#define __tflite_ScoreThresholdingOptions_formal_args , float v0
#define __tflite_ScoreThresholdingOptions_call_args , v0
static inline tflite_ScoreThresholdingOptions_ref_t tflite_ScoreThresholdingOptions_create(flatbuffers_builder_t *B __tflite_ScoreThresholdingOptions_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_ScoreThresholdingOptions, tflite_ScoreThresholdingOptions_file_identifier, tflite_ScoreThresholdingOptions_type_identifier)

#define __tflite_BertTokenizerOptions_formal_args , tflite_AssociatedFile_vec_ref_t v0
#define __tflite_BertTokenizerOptions_call_args , v0
static inline tflite_BertTokenizerOptions_ref_t tflite_BertTokenizerOptions_create(flatbuffers_builder_t *B __tflite_BertTokenizerOptions_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_BertTokenizerOptions, tflite_BertTokenizerOptions_file_identifier, tflite_BertTokenizerOptions_type_identifier)

#define __tflite_SentencePieceTokenizerOptions_formal_args , tflite_AssociatedFile_vec_ref_t v0, tflite_AssociatedFile_vec_ref_t v1
#define __tflite_SentencePieceTokenizerOptions_call_args , v0, v1
static inline tflite_SentencePieceTokenizerOptions_ref_t tflite_SentencePieceTokenizerOptions_create(flatbuffers_builder_t *B __tflite_SentencePieceTokenizerOptions_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_SentencePieceTokenizerOptions, tflite_SentencePieceTokenizerOptions_file_identifier, tflite_SentencePieceTokenizerOptions_type_identifier)

#define __tflite_RegexTokenizerOptions_formal_args , flatbuffers_string_ref_t v0, tflite_AssociatedFile_vec_ref_t v1
#define __tflite_RegexTokenizerOptions_call_args , v0, v1
static inline tflite_RegexTokenizerOptions_ref_t tflite_RegexTokenizerOptions_create(flatbuffers_builder_t *B __tflite_RegexTokenizerOptions_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_RegexTokenizerOptions, tflite_RegexTokenizerOptions_file_identifier, tflite_RegexTokenizerOptions_type_identifier)

#define __tflite_ProcessUnit_formal_args , tflite_ProcessUnitOptions_union_ref_t v1
#define __tflite_ProcessUnit_call_args , v1
static inline tflite_ProcessUnit_ref_t tflite_ProcessUnit_create(flatbuffers_builder_t *B __tflite_ProcessUnit_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_ProcessUnit, tflite_ProcessUnit_file_identifier, tflite_ProcessUnit_type_identifier)

#define __tflite_Stats_formal_args , flatbuffers_float_vec_ref_t v0, flatbuffers_float_vec_ref_t v1
#define __tflite_Stats_call_args , v0, v1
static inline tflite_Stats_ref_t tflite_Stats_create(flatbuffers_builder_t *B __tflite_Stats_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_Stats, tflite_Stats_file_identifier, tflite_Stats_type_identifier)

#define __tflite_TensorGroup_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_vec_ref_t v1
#define __tflite_TensorGroup_call_args , v0, v1
static inline tflite_TensorGroup_ref_t tflite_TensorGroup_create(flatbuffers_builder_t *B __tflite_TensorGroup_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_TensorGroup, tflite_TensorGroup_file_identifier, tflite_TensorGroup_type_identifier)

#define __tflite_TensorMetadata_formal_args ,\
  flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, flatbuffers_string_vec_ref_t v2, tflite_Content_ref_t v3,\
  tflite_ProcessUnit_vec_ref_t v4, tflite_Stats_ref_t v5, tflite_AssociatedFile_vec_ref_t v6
#define __tflite_TensorMetadata_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6
static inline tflite_TensorMetadata_ref_t tflite_TensorMetadata_create(flatbuffers_builder_t *B __tflite_TensorMetadata_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_TensorMetadata, tflite_TensorMetadata_file_identifier, tflite_TensorMetadata_type_identifier)

#define __tflite_CustomMetadata_formal_args , flatbuffers_string_ref_t v0
#define __tflite_CustomMetadata_call_args , v0
static inline tflite_CustomMetadata_ref_t tflite_CustomMetadata_create(flatbuffers_builder_t *B __tflite_CustomMetadata_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_CustomMetadata, tflite_CustomMetadata_file_identifier, tflite_CustomMetadata_type_identifier)

#define __tflite_SubGraphMetadata_formal_args ,\
  flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, tflite_TensorMetadata_vec_ref_t v2, tflite_TensorMetadata_vec_ref_t v3,\
  tflite_AssociatedFile_vec_ref_t v4, tflite_ProcessUnit_vec_ref_t v5, tflite_ProcessUnit_vec_ref_t v6, tflite_TensorGroup_vec_ref_t v7, tflite_TensorGroup_vec_ref_t v8, tflite_CustomMetadata_vec_ref_t v9
#define __tflite_SubGraphMetadata_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7, v8, v9
static inline tflite_SubGraphMetadata_ref_t tflite_SubGraphMetadata_create(flatbuffers_builder_t *B __tflite_SubGraphMetadata_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_SubGraphMetadata, tflite_SubGraphMetadata_file_identifier, tflite_SubGraphMetadata_type_identifier)

#define __tflite_ModelMetadata_formal_args ,\
  flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, flatbuffers_string_ref_t v2, tflite_SubGraphMetadata_vec_ref_t v3,\
  flatbuffers_string_ref_t v4, flatbuffers_string_ref_t v5, tflite_AssociatedFile_vec_ref_t v6, flatbuffers_string_ref_t v7
#define __tflite_ModelMetadata_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7
static inline tflite_ModelMetadata_ref_t tflite_ModelMetadata_create(flatbuffers_builder_t *B __tflite_ModelMetadata_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tflite_ModelMetadata, tflite_ModelMetadata_file_identifier, tflite_ModelMetadata_type_identifier)

static inline tflite_ContentProperties_union_ref_t tflite_ContentProperties_as_NONE(void)
{ tflite_ContentProperties_union_ref_t uref; uref.type = tflite_ContentProperties_NONE; uref.value = 0; return uref; }
static inline tflite_ContentProperties_union_ref_t tflite_ContentProperties_as_FeatureProperties(tflite_FeatureProperties_ref_t ref)
{ tflite_ContentProperties_union_ref_t uref; uref.type = tflite_ContentProperties_FeatureProperties; uref.value = ref; return uref; }
static inline tflite_ContentProperties_union_ref_t tflite_ContentProperties_as_ImageProperties(tflite_ImageProperties_ref_t ref)
{ tflite_ContentProperties_union_ref_t uref; uref.type = tflite_ContentProperties_ImageProperties; uref.value = ref; return uref; }
static inline tflite_ContentProperties_union_ref_t tflite_ContentProperties_as_BoundingBoxProperties(tflite_BoundingBoxProperties_ref_t ref)
{ tflite_ContentProperties_union_ref_t uref; uref.type = tflite_ContentProperties_BoundingBoxProperties; uref.value = ref; return uref; }
static inline tflite_ContentProperties_union_ref_t tflite_ContentProperties_as_AudioProperties(tflite_AudioProperties_ref_t ref)
{ tflite_ContentProperties_union_ref_t uref; uref.type = tflite_ContentProperties_AudioProperties; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, tflite_ContentProperties)

static tflite_ContentProperties_union_ref_t tflite_ContentProperties_clone(flatbuffers_builder_t *B, tflite_ContentProperties_union_t u)
{
    switch (u.type) {
    case 1: return tflite_ContentProperties_as_FeatureProperties(tflite_FeatureProperties_clone(B, (tflite_FeatureProperties_table_t)u.value));
    case 2: return tflite_ContentProperties_as_ImageProperties(tflite_ImageProperties_clone(B, (tflite_ImageProperties_table_t)u.value));
    case 3: return tflite_ContentProperties_as_BoundingBoxProperties(tflite_BoundingBoxProperties_clone(B, (tflite_BoundingBoxProperties_table_t)u.value));
    case 4: return tflite_ContentProperties_as_AudioProperties(tflite_AudioProperties_clone(B, (tflite_AudioProperties_table_t)u.value));
    default: return tflite_ContentProperties_as_NONE();
    }
}

static inline tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_as_NONE(void)
{ tflite_ProcessUnitOptions_union_ref_t uref; uref.type = tflite_ProcessUnitOptions_NONE; uref.value = 0; return uref; }
static inline tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_as_NormalizationOptions(tflite_NormalizationOptions_ref_t ref)
{ tflite_ProcessUnitOptions_union_ref_t uref; uref.type = tflite_ProcessUnitOptions_NormalizationOptions; uref.value = ref; return uref; }
static inline tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_as_ScoreCalibrationOptions(tflite_ScoreCalibrationOptions_ref_t ref)
{ tflite_ProcessUnitOptions_union_ref_t uref; uref.type = tflite_ProcessUnitOptions_ScoreCalibrationOptions; uref.value = ref; return uref; }
static inline tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_as_ScoreThresholdingOptions(tflite_ScoreThresholdingOptions_ref_t ref)
{ tflite_ProcessUnitOptions_union_ref_t uref; uref.type = tflite_ProcessUnitOptions_ScoreThresholdingOptions; uref.value = ref; return uref; }
static inline tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_as_BertTokenizerOptions(tflite_BertTokenizerOptions_ref_t ref)
{ tflite_ProcessUnitOptions_union_ref_t uref; uref.type = tflite_ProcessUnitOptions_BertTokenizerOptions; uref.value = ref; return uref; }
static inline tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_as_SentencePieceTokenizerOptions(tflite_SentencePieceTokenizerOptions_ref_t ref)
{ tflite_ProcessUnitOptions_union_ref_t uref; uref.type = tflite_ProcessUnitOptions_SentencePieceTokenizerOptions; uref.value = ref; return uref; }
static inline tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_as_RegexTokenizerOptions(tflite_RegexTokenizerOptions_ref_t ref)
{ tflite_ProcessUnitOptions_union_ref_t uref; uref.type = tflite_ProcessUnitOptions_RegexTokenizerOptions; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, tflite_ProcessUnitOptions)

static tflite_ProcessUnitOptions_union_ref_t tflite_ProcessUnitOptions_clone(flatbuffers_builder_t *B, tflite_ProcessUnitOptions_union_t u)
{
    switch (u.type) {
    case 1: return tflite_ProcessUnitOptions_as_NormalizationOptions(tflite_NormalizationOptions_clone(B, (tflite_NormalizationOptions_table_t)u.value));
    case 2: return tflite_ProcessUnitOptions_as_ScoreCalibrationOptions(tflite_ScoreCalibrationOptions_clone(B, (tflite_ScoreCalibrationOptions_table_t)u.value));
    case 3: return tflite_ProcessUnitOptions_as_ScoreThresholdingOptions(tflite_ScoreThresholdingOptions_clone(B, (tflite_ScoreThresholdingOptions_table_t)u.value));
    case 4: return tflite_ProcessUnitOptions_as_BertTokenizerOptions(tflite_BertTokenizerOptions_clone(B, (tflite_BertTokenizerOptions_table_t)u.value));
    case 5: return tflite_ProcessUnitOptions_as_SentencePieceTokenizerOptions(tflite_SentencePieceTokenizerOptions_clone(B, (tflite_SentencePieceTokenizerOptions_table_t)u.value));
    case 6: return tflite_ProcessUnitOptions_as_RegexTokenizerOptions(tflite_RegexTokenizerOptions_clone(B, (tflite_RegexTokenizerOptions_table_t)u.value));
    default: return tflite_ProcessUnitOptions_as_NONE();
    }
}

__flatbuffers_build_string_field(0, flatbuffers_, tflite_AssociatedFile_name, tflite_AssociatedFile)
__flatbuffers_build_string_field(1, flatbuffers_, tflite_AssociatedFile_description, tflite_AssociatedFile)
__flatbuffers_build_scalar_field(2, flatbuffers_, tflite_AssociatedFile_type, tflite_AssociatedFileType, tflite_AssociatedFileType_enum_t, 1, 1, INT8_C(0), tflite_AssociatedFile)
__flatbuffers_build_string_field(3, flatbuffers_, tflite_AssociatedFile_locale, tflite_AssociatedFile)
__flatbuffers_build_string_field(4, flatbuffers_, tflite_AssociatedFile_version, tflite_AssociatedFile)

static inline tflite_AssociatedFile_ref_t tflite_AssociatedFile_create(flatbuffers_builder_t *B __tflite_AssociatedFile_formal_args)
{
    if (tflite_AssociatedFile_start(B)
        || tflite_AssociatedFile_name_add(B, v0)
        || tflite_AssociatedFile_description_add(B, v1)
        || tflite_AssociatedFile_locale_add(B, v3)
        || tflite_AssociatedFile_version_add(B, v4)
        || tflite_AssociatedFile_type_add(B, v2)) {
        return 0;
    }
    return tflite_AssociatedFile_end(B);
}

static tflite_AssociatedFile_ref_t tflite_AssociatedFile_clone(flatbuffers_builder_t *B, tflite_AssociatedFile_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_AssociatedFile_start(B)
        || tflite_AssociatedFile_name_pick(B, t)
        || tflite_AssociatedFile_description_pick(B, t)
        || tflite_AssociatedFile_locale_pick(B, t)
        || tflite_AssociatedFile_version_pick(B, t)
        || tflite_AssociatedFile_type_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_AssociatedFile_end(B));
}


static inline tflite_FeatureProperties_ref_t tflite_FeatureProperties_create(flatbuffers_builder_t *B __tflite_FeatureProperties_formal_args)
{
    if (tflite_FeatureProperties_start(B)) {
        return 0;
    }
    return tflite_FeatureProperties_end(B);
}

static tflite_FeatureProperties_ref_t tflite_FeatureProperties_clone(flatbuffers_builder_t *B, tflite_FeatureProperties_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_FeatureProperties_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_FeatureProperties_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, tflite_ImageSize_width, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), tflite_ImageSize)
__flatbuffers_build_scalar_field(1, flatbuffers_, tflite_ImageSize_height, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), tflite_ImageSize)

static inline tflite_ImageSize_ref_t tflite_ImageSize_create(flatbuffers_builder_t *B __tflite_ImageSize_formal_args)
{
    if (tflite_ImageSize_start(B)
        || tflite_ImageSize_width_add(B, v0)
        || tflite_ImageSize_height_add(B, v1)) {
        return 0;
    }
    return tflite_ImageSize_end(B);
}

static tflite_ImageSize_ref_t tflite_ImageSize_clone(flatbuffers_builder_t *B, tflite_ImageSize_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_ImageSize_start(B)
        || tflite_ImageSize_width_pick(B, t)
        || tflite_ImageSize_height_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_ImageSize_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, tflite_ImageProperties_color_space, tflite_ColorSpaceType, tflite_ColorSpaceType_enum_t, 1, 1, INT8_C(0), tflite_ImageProperties)
__flatbuffers_build_table_field(1, flatbuffers_, tflite_ImageProperties_default_size, tflite_ImageSize, tflite_ImageProperties)

static inline tflite_ImageProperties_ref_t tflite_ImageProperties_create(flatbuffers_builder_t *B __tflite_ImageProperties_formal_args)
{
    if (tflite_ImageProperties_start(B)
        || tflite_ImageProperties_default_size_add(B, v1)
        || tflite_ImageProperties_color_space_add(B, v0)) {
        return 0;
    }
    return tflite_ImageProperties_end(B);
}

static tflite_ImageProperties_ref_t tflite_ImageProperties_clone(flatbuffers_builder_t *B, tflite_ImageProperties_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_ImageProperties_start(B)
        || tflite_ImageProperties_default_size_pick(B, t)
        || tflite_ImageProperties_color_space_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_ImageProperties_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, tflite_AudioProperties_sample_rate, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), tflite_AudioProperties)
__flatbuffers_build_scalar_field(1, flatbuffers_, tflite_AudioProperties_channels, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), tflite_AudioProperties)

static inline tflite_AudioProperties_ref_t tflite_AudioProperties_create(flatbuffers_builder_t *B __tflite_AudioProperties_formal_args)
{
    if (tflite_AudioProperties_start(B)
        || tflite_AudioProperties_sample_rate_add(B, v0)
        || tflite_AudioProperties_channels_add(B, v1)) {
        return 0;
    }
    return tflite_AudioProperties_end(B);
}

static tflite_AudioProperties_ref_t tflite_AudioProperties_clone(flatbuffers_builder_t *B, tflite_AudioProperties_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_AudioProperties_start(B)
        || tflite_AudioProperties_sample_rate_pick(B, t)
        || tflite_AudioProperties_channels_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_AudioProperties_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, tflite_BoundingBoxProperties_index, flatbuffers_uint32, uint32_t, tflite_BoundingBoxProperties)
__flatbuffers_build_scalar_field(1, flatbuffers_, tflite_BoundingBoxProperties_type, tflite_BoundingBoxType, tflite_BoundingBoxType_enum_t, 1, 1, INT8_C(0), tflite_BoundingBoxProperties)
__flatbuffers_build_scalar_field(2, flatbuffers_, tflite_BoundingBoxProperties_coordinate_type, tflite_CoordinateType, tflite_CoordinateType_enum_t, 1, 1, INT8_C(0), tflite_BoundingBoxProperties)

static inline tflite_BoundingBoxProperties_ref_t tflite_BoundingBoxProperties_create(flatbuffers_builder_t *B __tflite_BoundingBoxProperties_formal_args)
{
    if (tflite_BoundingBoxProperties_start(B)
        || tflite_BoundingBoxProperties_index_add(B, v0)
        || tflite_BoundingBoxProperties_type_add(B, v1)
        || tflite_BoundingBoxProperties_coordinate_type_add(B, v2)) {
        return 0;
    }
    return tflite_BoundingBoxProperties_end(B);
}

static tflite_BoundingBoxProperties_ref_t tflite_BoundingBoxProperties_clone(flatbuffers_builder_t *B, tflite_BoundingBoxProperties_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_BoundingBoxProperties_start(B)
        || tflite_BoundingBoxProperties_index_pick(B, t)
        || tflite_BoundingBoxProperties_type_pick(B, t)
        || tflite_BoundingBoxProperties_coordinate_type_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_BoundingBoxProperties_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, tflite_ValueRange_min, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), tflite_ValueRange)
__flatbuffers_build_scalar_field(1, flatbuffers_, tflite_ValueRange_max, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), tflite_ValueRange)

static inline tflite_ValueRange_ref_t tflite_ValueRange_create(flatbuffers_builder_t *B __tflite_ValueRange_formal_args)
{
    if (tflite_ValueRange_start(B)
        || tflite_ValueRange_min_add(B, v0)
        || tflite_ValueRange_max_add(B, v1)) {
        return 0;
    }
    return tflite_ValueRange_end(B);
}

static tflite_ValueRange_ref_t tflite_ValueRange_clone(flatbuffers_builder_t *B, tflite_ValueRange_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_ValueRange_start(B)
        || tflite_ValueRange_min_pick(B, t)
        || tflite_ValueRange_max_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_ValueRange_end(B));
}

__flatbuffers_build_union_field(1, flatbuffers_, tflite_Content_content_properties, tflite_ContentProperties, tflite_Content)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_Content_content_properties, tflite_ContentProperties, FeatureProperties, tflite_FeatureProperties)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_Content_content_properties, tflite_ContentProperties, ImageProperties, tflite_ImageProperties)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_Content_content_properties, tflite_ContentProperties, BoundingBoxProperties, tflite_BoundingBoxProperties)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_Content_content_properties, tflite_ContentProperties, AudioProperties, tflite_AudioProperties)
__flatbuffers_build_table_field(2, flatbuffers_, tflite_Content_range, tflite_ValueRange, tflite_Content)

static inline tflite_Content_ref_t tflite_Content_create(flatbuffers_builder_t *B __tflite_Content_formal_args)
{
    if (tflite_Content_start(B)
        || tflite_Content_content_properties_add_value(B, v1)
        || tflite_Content_range_add(B, v2)
        || tflite_Content_content_properties_add_type(B, v1.type)) {
        return 0;
    }
    return tflite_Content_end(B);
}

static tflite_Content_ref_t tflite_Content_clone(flatbuffers_builder_t *B, tflite_Content_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_Content_start(B)
        || tflite_Content_content_properties_pick(B, t)
        || tflite_Content_range_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_Content_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, tflite_NormalizationOptions_mean, flatbuffers_float, float, tflite_NormalizationOptions)
__flatbuffers_build_vector_field(1, flatbuffers_, tflite_NormalizationOptions_std, flatbuffers_float, float, tflite_NormalizationOptions)

static inline tflite_NormalizationOptions_ref_t tflite_NormalizationOptions_create(flatbuffers_builder_t *B __tflite_NormalizationOptions_formal_args)
{
    if (tflite_NormalizationOptions_start(B)
        || tflite_NormalizationOptions_mean_add(B, v0)
        || tflite_NormalizationOptions_std_add(B, v1)) {
        return 0;
    }
    return tflite_NormalizationOptions_end(B);
}

static tflite_NormalizationOptions_ref_t tflite_NormalizationOptions_clone(flatbuffers_builder_t *B, tflite_NormalizationOptions_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_NormalizationOptions_start(B)
        || tflite_NormalizationOptions_mean_pick(B, t)
        || tflite_NormalizationOptions_std_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_NormalizationOptions_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, tflite_ScoreCalibrationOptions_score_transformation, tflite_ScoreTransformationType, tflite_ScoreTransformationType_enum_t, 1, 1, INT8_C(0), tflite_ScoreCalibrationOptions)
__flatbuffers_build_scalar_field(1, flatbuffers_, tflite_ScoreCalibrationOptions_default_score, flatbuffers_float, float, 4, 4, 0.00000000f, tflite_ScoreCalibrationOptions)

static inline tflite_ScoreCalibrationOptions_ref_t tflite_ScoreCalibrationOptions_create(flatbuffers_builder_t *B __tflite_ScoreCalibrationOptions_formal_args)
{
    if (tflite_ScoreCalibrationOptions_start(B)
        || tflite_ScoreCalibrationOptions_default_score_add(B, v1)
        || tflite_ScoreCalibrationOptions_score_transformation_add(B, v0)) {
        return 0;
    }
    return tflite_ScoreCalibrationOptions_end(B);
}

static tflite_ScoreCalibrationOptions_ref_t tflite_ScoreCalibrationOptions_clone(flatbuffers_builder_t *B, tflite_ScoreCalibrationOptions_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_ScoreCalibrationOptions_start(B)
        || tflite_ScoreCalibrationOptions_default_score_pick(B, t)
        || tflite_ScoreCalibrationOptions_score_transformation_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_ScoreCalibrationOptions_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, tflite_ScoreThresholdingOptions_global_score_threshold, flatbuffers_float, float, 4, 4, 0.00000000f, tflite_ScoreThresholdingOptions)

static inline tflite_ScoreThresholdingOptions_ref_t tflite_ScoreThresholdingOptions_create(flatbuffers_builder_t *B __tflite_ScoreThresholdingOptions_formal_args)
{
    if (tflite_ScoreThresholdingOptions_start(B)
        || tflite_ScoreThresholdingOptions_global_score_threshold_add(B, v0)) {
        return 0;
    }
    return tflite_ScoreThresholdingOptions_end(B);
}

static tflite_ScoreThresholdingOptions_ref_t tflite_ScoreThresholdingOptions_clone(flatbuffers_builder_t *B, tflite_ScoreThresholdingOptions_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_ScoreThresholdingOptions_start(B)
        || tflite_ScoreThresholdingOptions_global_score_threshold_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_ScoreThresholdingOptions_end(B));
}

__flatbuffers_build_table_vector_field(0, flatbuffers_, tflite_BertTokenizerOptions_vocab_file, tflite_AssociatedFile, tflite_BertTokenizerOptions)

static inline tflite_BertTokenizerOptions_ref_t tflite_BertTokenizerOptions_create(flatbuffers_builder_t *B __tflite_BertTokenizerOptions_formal_args)
{
    if (tflite_BertTokenizerOptions_start(B)
        || tflite_BertTokenizerOptions_vocab_file_add(B, v0)) {
        return 0;
    }
    return tflite_BertTokenizerOptions_end(B);
}

static tflite_BertTokenizerOptions_ref_t tflite_BertTokenizerOptions_clone(flatbuffers_builder_t *B, tflite_BertTokenizerOptions_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_BertTokenizerOptions_start(B)
        || tflite_BertTokenizerOptions_vocab_file_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_BertTokenizerOptions_end(B));
}

__flatbuffers_build_table_vector_field(0, flatbuffers_, tflite_SentencePieceTokenizerOptions_sentencePiece_model, tflite_AssociatedFile, tflite_SentencePieceTokenizerOptions)
__flatbuffers_build_table_vector_field(1, flatbuffers_, tflite_SentencePieceTokenizerOptions_vocab_file, tflite_AssociatedFile, tflite_SentencePieceTokenizerOptions)

static inline tflite_SentencePieceTokenizerOptions_ref_t tflite_SentencePieceTokenizerOptions_create(flatbuffers_builder_t *B __tflite_SentencePieceTokenizerOptions_formal_args)
{
    if (tflite_SentencePieceTokenizerOptions_start(B)
        || tflite_SentencePieceTokenizerOptions_sentencePiece_model_add(B, v0)
        || tflite_SentencePieceTokenizerOptions_vocab_file_add(B, v1)) {
        return 0;
    }
    return tflite_SentencePieceTokenizerOptions_end(B);
}

static tflite_SentencePieceTokenizerOptions_ref_t tflite_SentencePieceTokenizerOptions_clone(flatbuffers_builder_t *B, tflite_SentencePieceTokenizerOptions_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_SentencePieceTokenizerOptions_start(B)
        || tflite_SentencePieceTokenizerOptions_sentencePiece_model_pick(B, t)
        || tflite_SentencePieceTokenizerOptions_vocab_file_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_SentencePieceTokenizerOptions_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, tflite_RegexTokenizerOptions_delim_regex_pattern, tflite_RegexTokenizerOptions)
__flatbuffers_build_table_vector_field(1, flatbuffers_, tflite_RegexTokenizerOptions_vocab_file, tflite_AssociatedFile, tflite_RegexTokenizerOptions)

static inline tflite_RegexTokenizerOptions_ref_t tflite_RegexTokenizerOptions_create(flatbuffers_builder_t *B __tflite_RegexTokenizerOptions_formal_args)
{
    if (tflite_RegexTokenizerOptions_start(B)
        || tflite_RegexTokenizerOptions_delim_regex_pattern_add(B, v0)
        || tflite_RegexTokenizerOptions_vocab_file_add(B, v1)) {
        return 0;
    }
    return tflite_RegexTokenizerOptions_end(B);
}

static tflite_RegexTokenizerOptions_ref_t tflite_RegexTokenizerOptions_clone(flatbuffers_builder_t *B, tflite_RegexTokenizerOptions_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_RegexTokenizerOptions_start(B)
        || tflite_RegexTokenizerOptions_delim_regex_pattern_pick(B, t)
        || tflite_RegexTokenizerOptions_vocab_file_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_RegexTokenizerOptions_end(B));
}

__flatbuffers_build_union_field(1, flatbuffers_, tflite_ProcessUnit_options, tflite_ProcessUnitOptions, tflite_ProcessUnit)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_ProcessUnit_options, tflite_ProcessUnitOptions, NormalizationOptions, tflite_NormalizationOptions)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_ProcessUnit_options, tflite_ProcessUnitOptions, ScoreCalibrationOptions, tflite_ScoreCalibrationOptions)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_ProcessUnit_options, tflite_ProcessUnitOptions, ScoreThresholdingOptions, tflite_ScoreThresholdingOptions)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_ProcessUnit_options, tflite_ProcessUnitOptions, BertTokenizerOptions, tflite_BertTokenizerOptions)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_ProcessUnit_options, tflite_ProcessUnitOptions, SentencePieceTokenizerOptions, tflite_SentencePieceTokenizerOptions)
__flatbuffers_build_union_table_value_field(flatbuffers_, tflite_ProcessUnit_options, tflite_ProcessUnitOptions, RegexTokenizerOptions, tflite_RegexTokenizerOptions)

static inline tflite_ProcessUnit_ref_t tflite_ProcessUnit_create(flatbuffers_builder_t *B __tflite_ProcessUnit_formal_args)
{
    if (tflite_ProcessUnit_start(B)
        || tflite_ProcessUnit_options_add_value(B, v1)
        || tflite_ProcessUnit_options_add_type(B, v1.type)) {
        return 0;
    }
    return tflite_ProcessUnit_end(B);
}

static tflite_ProcessUnit_ref_t tflite_ProcessUnit_clone(flatbuffers_builder_t *B, tflite_ProcessUnit_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_ProcessUnit_start(B)
        || tflite_ProcessUnit_options_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_ProcessUnit_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, tflite_Stats_max, flatbuffers_float, float, tflite_Stats)
__flatbuffers_build_vector_field(1, flatbuffers_, tflite_Stats_min, flatbuffers_float, float, tflite_Stats)

static inline tflite_Stats_ref_t tflite_Stats_create(flatbuffers_builder_t *B __tflite_Stats_formal_args)
{
    if (tflite_Stats_start(B)
        || tflite_Stats_max_add(B, v0)
        || tflite_Stats_min_add(B, v1)) {
        return 0;
    }
    return tflite_Stats_end(B);
}

static tflite_Stats_ref_t tflite_Stats_clone(flatbuffers_builder_t *B, tflite_Stats_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_Stats_start(B)
        || tflite_Stats_max_pick(B, t)
        || tflite_Stats_min_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_Stats_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, tflite_TensorGroup_name, tflite_TensorGroup)
__flatbuffers_build_string_vector_field(1, flatbuffers_, tflite_TensorGroup_tensor_names, tflite_TensorGroup)

static inline tflite_TensorGroup_ref_t tflite_TensorGroup_create(flatbuffers_builder_t *B __tflite_TensorGroup_formal_args)
{
    if (tflite_TensorGroup_start(B)
        || tflite_TensorGroup_name_add(B, v0)
        || tflite_TensorGroup_tensor_names_add(B, v1)) {
        return 0;
    }
    return tflite_TensorGroup_end(B);
}

static tflite_TensorGroup_ref_t tflite_TensorGroup_clone(flatbuffers_builder_t *B, tflite_TensorGroup_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_TensorGroup_start(B)
        || tflite_TensorGroup_name_pick(B, t)
        || tflite_TensorGroup_tensor_names_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_TensorGroup_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, tflite_TensorMetadata_name, tflite_TensorMetadata)
__flatbuffers_build_string_field(1, flatbuffers_, tflite_TensorMetadata_description, tflite_TensorMetadata)
__flatbuffers_build_string_vector_field(2, flatbuffers_, tflite_TensorMetadata_dimension_names, tflite_TensorMetadata)
__flatbuffers_build_table_field(3, flatbuffers_, tflite_TensorMetadata_content, tflite_Content, tflite_TensorMetadata)
__flatbuffers_build_table_vector_field(4, flatbuffers_, tflite_TensorMetadata_process_units, tflite_ProcessUnit, tflite_TensorMetadata)
__flatbuffers_build_table_field(5, flatbuffers_, tflite_TensorMetadata_stats, tflite_Stats, tflite_TensorMetadata)
__flatbuffers_build_table_vector_field(6, flatbuffers_, tflite_TensorMetadata_associated_files, tflite_AssociatedFile, tflite_TensorMetadata)

static inline tflite_TensorMetadata_ref_t tflite_TensorMetadata_create(flatbuffers_builder_t *B __tflite_TensorMetadata_formal_args)
{
    if (tflite_TensorMetadata_start(B)
        || tflite_TensorMetadata_name_add(B, v0)
        || tflite_TensorMetadata_description_add(B, v1)
        || tflite_TensorMetadata_dimension_names_add(B, v2)
        || tflite_TensorMetadata_content_add(B, v3)
        || tflite_TensorMetadata_process_units_add(B, v4)
        || tflite_TensorMetadata_stats_add(B, v5)
        || tflite_TensorMetadata_associated_files_add(B, v6)) {
        return 0;
    }
    return tflite_TensorMetadata_end(B);
}

static tflite_TensorMetadata_ref_t tflite_TensorMetadata_clone(flatbuffers_builder_t *B, tflite_TensorMetadata_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_TensorMetadata_start(B)
        || tflite_TensorMetadata_name_pick(B, t)
        || tflite_TensorMetadata_description_pick(B, t)
        || tflite_TensorMetadata_dimension_names_pick(B, t)
        || tflite_TensorMetadata_content_pick(B, t)
        || tflite_TensorMetadata_process_units_pick(B, t)
        || tflite_TensorMetadata_stats_pick(B, t)
        || tflite_TensorMetadata_associated_files_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_TensorMetadata_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, tflite_CustomMetadata_name, tflite_CustomMetadata)

static inline tflite_CustomMetadata_ref_t tflite_CustomMetadata_create(flatbuffers_builder_t *B __tflite_CustomMetadata_formal_args)
{
    if (tflite_CustomMetadata_start(B)
        || tflite_CustomMetadata_name_add(B, v0)) {
        return 0;
    }
    return tflite_CustomMetadata_end(B);
}

static tflite_CustomMetadata_ref_t tflite_CustomMetadata_clone(flatbuffers_builder_t *B, tflite_CustomMetadata_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_CustomMetadata_start(B)
        || tflite_CustomMetadata_name_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_CustomMetadata_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, tflite_SubGraphMetadata_name, tflite_SubGraphMetadata)
__flatbuffers_build_string_field(1, flatbuffers_, tflite_SubGraphMetadata_description, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(2, flatbuffers_, tflite_SubGraphMetadata_input_tensor_metadata, tflite_TensorMetadata, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(3, flatbuffers_, tflite_SubGraphMetadata_output_tensor_metadata, tflite_TensorMetadata, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(4, flatbuffers_, tflite_SubGraphMetadata_associated_files, tflite_AssociatedFile, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(5, flatbuffers_, tflite_SubGraphMetadata_input_process_units, tflite_ProcessUnit, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(6, flatbuffers_, tflite_SubGraphMetadata_output_process_units, tflite_ProcessUnit, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(7, flatbuffers_, tflite_SubGraphMetadata_input_tensor_groups, tflite_TensorGroup, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(8, flatbuffers_, tflite_SubGraphMetadata_output_tensor_groups, tflite_TensorGroup, tflite_SubGraphMetadata)
__flatbuffers_build_table_vector_field(9, flatbuffers_, tflite_SubGraphMetadata_custom_metadata, tflite_CustomMetadata, tflite_SubGraphMetadata)

static inline tflite_SubGraphMetadata_ref_t tflite_SubGraphMetadata_create(flatbuffers_builder_t *B __tflite_SubGraphMetadata_formal_args)
{
    if (tflite_SubGraphMetadata_start(B)
        || tflite_SubGraphMetadata_name_add(B, v0)
        || tflite_SubGraphMetadata_description_add(B, v1)
        || tflite_SubGraphMetadata_input_tensor_metadata_add(B, v2)
        || tflite_SubGraphMetadata_output_tensor_metadata_add(B, v3)
        || tflite_SubGraphMetadata_associated_files_add(B, v4)
        || tflite_SubGraphMetadata_input_process_units_add(B, v5)
        || tflite_SubGraphMetadata_output_process_units_add(B, v6)
        || tflite_SubGraphMetadata_input_tensor_groups_add(B, v7)
        || tflite_SubGraphMetadata_output_tensor_groups_add(B, v8)
        || tflite_SubGraphMetadata_custom_metadata_add(B, v9)) {
        return 0;
    }
    return tflite_SubGraphMetadata_end(B);
}

static tflite_SubGraphMetadata_ref_t tflite_SubGraphMetadata_clone(flatbuffers_builder_t *B, tflite_SubGraphMetadata_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_SubGraphMetadata_start(B)
        || tflite_SubGraphMetadata_name_pick(B, t)
        || tflite_SubGraphMetadata_description_pick(B, t)
        || tflite_SubGraphMetadata_input_tensor_metadata_pick(B, t)
        || tflite_SubGraphMetadata_output_tensor_metadata_pick(B, t)
        || tflite_SubGraphMetadata_associated_files_pick(B, t)
        || tflite_SubGraphMetadata_input_process_units_pick(B, t)
        || tflite_SubGraphMetadata_output_process_units_pick(B, t)
        || tflite_SubGraphMetadata_input_tensor_groups_pick(B, t)
        || tflite_SubGraphMetadata_output_tensor_groups_pick(B, t)
        || tflite_SubGraphMetadata_custom_metadata_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_SubGraphMetadata_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, tflite_ModelMetadata_name, tflite_ModelMetadata)
__flatbuffers_build_string_field(1, flatbuffers_, tflite_ModelMetadata_description, tflite_ModelMetadata)
__flatbuffers_build_string_field(2, flatbuffers_, tflite_ModelMetadata_version, tflite_ModelMetadata)
__flatbuffers_build_table_vector_field(3, flatbuffers_, tflite_ModelMetadata_subgraph_metadata, tflite_SubGraphMetadata, tflite_ModelMetadata)
__flatbuffers_build_string_field(4, flatbuffers_, tflite_ModelMetadata_author, tflite_ModelMetadata)
__flatbuffers_build_string_field(5, flatbuffers_, tflite_ModelMetadata_license, tflite_ModelMetadata)
__flatbuffers_build_table_vector_field(6, flatbuffers_, tflite_ModelMetadata_associated_files, tflite_AssociatedFile, tflite_ModelMetadata)
__flatbuffers_build_string_field(7, flatbuffers_, tflite_ModelMetadata_min_parser_version, tflite_ModelMetadata)

static inline tflite_ModelMetadata_ref_t tflite_ModelMetadata_create(flatbuffers_builder_t *B __tflite_ModelMetadata_formal_args)
{
    if (tflite_ModelMetadata_start(B)
        || tflite_ModelMetadata_name_add(B, v0)
        || tflite_ModelMetadata_description_add(B, v1)
        || tflite_ModelMetadata_version_add(B, v2)
        || tflite_ModelMetadata_subgraph_metadata_add(B, v3)
        || tflite_ModelMetadata_author_add(B, v4)
        || tflite_ModelMetadata_license_add(B, v5)
        || tflite_ModelMetadata_associated_files_add(B, v6)
        || tflite_ModelMetadata_min_parser_version_add(B, v7)) {
        return 0;
    }
    return tflite_ModelMetadata_end(B);
}

static tflite_ModelMetadata_ref_t tflite_ModelMetadata_clone(flatbuffers_builder_t *B, tflite_ModelMetadata_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tflite_ModelMetadata_start(B)
        || tflite_ModelMetadata_name_pick(B, t)
        || tflite_ModelMetadata_description_pick(B, t)
        || tflite_ModelMetadata_version_pick(B, t)
        || tflite_ModelMetadata_subgraph_metadata_pick(B, t)
        || tflite_ModelMetadata_author_pick(B, t)
        || tflite_ModelMetadata_license_pick(B, t)
        || tflite_ModelMetadata_associated_files_pick(B, t)
        || tflite_ModelMetadata_min_parser_version_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tflite_ModelMetadata_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* TFLITE_BUILDER_H */
